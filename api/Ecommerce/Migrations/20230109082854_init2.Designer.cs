// <auto-generated />
using System;
using Ecommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230109082854_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Ecommerce.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "d9a18e19-75ea-4814-8f75-538e08d578f8",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(7773),
                            IsDeleted = false,
                            Name = "Chief Usability Supervisor",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(7789)
                        },
                        new
                        {
                            Id = "48d79c0a-6359-4f35-b9fd-9b73b476d731",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8310),
                            IsDeleted = false,
                            Name = "Global Functionality Coordinator",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8313)
                        },
                        new
                        {
                            Id = "9c20562a-b8a6-4a8b-888f-29ca9348c6c6",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8378),
                            IsDeleted = false,
                            Name = "Customer Assurance Manager",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8380)
                        },
                        new
                        {
                            Id = "9407dddb-fde7-4ef8-8438-4273d75e1e2a",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8416),
                            IsDeleted = false,
                            Name = "Lead Solutions Administrator",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8417)
                        },
                        new
                        {
                            Id = "0b9243d5-91fd-44d8-ad2d-e9e0a78c0f58",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8451),
                            IsDeleted = false,
                            Name = "Forward Creative Strategist",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8453)
                        },
                        new
                        {
                            Id = "3fd3ea05-4a78-408d-8003-9231b685c199",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8492),
                            IsDeleted = false,
                            Name = "National Security Associate",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8494)
                        },
                        new
                        {
                            Id = "3bc5b522-df9d-4bf3-87f8-7dad26218727",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8526),
                            IsDeleted = false,
                            Name = "Central Paradigm Liaison",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8528)
                        },
                        new
                        {
                            Id = "d8848735-5dc6-4487-bbc0-0b2c05e4ec15",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8559),
                            IsDeleted = false,
                            Name = "Human Data Designer",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8560)
                        },
                        new
                        {
                            Id = "66451abf-94ed-46db-8ae5-1d3d9c2b1399",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8674),
                            IsDeleted = false,
                            Name = "Forward Integration Architect",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8676)
                        },
                        new
                        {
                            Id = "c8b27ece-6fdc-4c40-9e92-33143ddeccd1",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8726),
                            IsDeleted = false,
                            Name = "Global Usability Coordinator",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 307, DateTimeKind.Local).AddTicks(8727)
                        });
                });

            modelBuilder.Entity("Ecommerce.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Ecommerce.Models.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrderId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Ecommerce.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "f94fc42e-df05-4612-b851-3dd067ebbea7",
                            CategoryId = "d8848735-5dc6-4487-bbc0-0b2c05e4ec15",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(5262),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Intelligent Fresh Bacon",
                            Price = "841.88",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(5268)
                        },
                        new
                        {
                            Id = "b20f4dc4-7c33-4f41-b455-5402a547755b",
                            CategoryId = "d9a18e19-75ea-4814-8f75-538e08d578f8",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6243),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Ergonomic Wooden Pizza",
                            Price = "747.02",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6247)
                        },
                        new
                        {
                            Id = "34e67687-dae7-4ef0-b20d-8999d7b6004e",
                            CategoryId = "9c20562a-b8a6-4a8b-888f-29ca9348c6c6",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6350),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Tasty Plastic Shoes",
                            Price = "962.04",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6352)
                        },
                        new
                        {
                            Id = "633fbf44-cdf1-4845-9616-9e2477e5acf7",
                            CategoryId = "9c20562a-b8a6-4a8b-888f-29ca9348c6c6",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6420),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Ergonomic Concrete Table",
                            Price = "157.86",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6422)
                        },
                        new
                        {
                            Id = "0c293b76-7ca2-48d4-a93c-cc03e0173f25",
                            CategoryId = "3fd3ea05-4a78-408d-8003-9231b685c199",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6480),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Unbranded Concrete Computer",
                            Price = "341.78",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6481)
                        },
                        new
                        {
                            Id = "7423fa7c-425c-4b9b-bd04-11fddfe7c3ef",
                            CategoryId = "9c20562a-b8a6-4a8b-888f-29ca9348c6c6",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6540),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Gorgeous Soft Gloves",
                            Price = "587.41",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6542)
                        },
                        new
                        {
                            Id = "19b6b6d9-6311-468f-ba2f-86701d79279c",
                            CategoryId = "d8848735-5dc6-4487-bbc0-0b2c05e4ec15",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6711),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Rustic Steel Bike",
                            Price = "995.63",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6713)
                        },
                        new
                        {
                            Id = "e87c2a15-821d-4a6d-8e0b-a3d15fe7486d",
                            CategoryId = "c8b27ece-6fdc-4c40-9e92-33143ddeccd1",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6807),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Generic Wooden Ball",
                            Price = "879.56",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6809)
                        },
                        new
                        {
                            Id = "afdc29a1-a637-4651-b5b7-12b4e013b0ec",
                            CategoryId = "3fd3ea05-4a78-408d-8003-9231b685c199",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6871),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Gorgeous Metal Keyboard",
                            Price = "325.59",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6873)
                        },
                        new
                        {
                            Id = "7405a603-ba19-4122-8189-98bc3d3a9401",
                            CategoryId = "d9a18e19-75ea-4814-8f75-538e08d578f8",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6931),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Practical Rubber Computer",
                            Price = "391.05",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6932)
                        },
                        new
                        {
                            Id = "5cfbae9e-0bb6-43c4-b363-d6d9ff20abfa",
                            CategoryId = "3bc5b522-df9d-4bf3-87f8-7dad26218727",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6987),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Unbranded Steel Computer",
                            Price = "786.54",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(6988)
                        },
                        new
                        {
                            Id = "f69f9548-4119-4cba-84a0-29800bd9b89c",
                            CategoryId = "9407dddb-fde7-4ef8-8438-4273d75e1e2a",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7042),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Refined Steel Sausages",
                            Price = "349.24",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7043)
                        },
                        new
                        {
                            Id = "331aacca-0227-443b-abfa-f8a971fb73e2",
                            CategoryId = "3bc5b522-df9d-4bf3-87f8-7dad26218727",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7098),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Ergonomic Soft Bacon",
                            Price = "133.29",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7100)
                        },
                        new
                        {
                            Id = "fb57778d-0b60-4b2c-937a-397c4268817a",
                            CategoryId = "3bc5b522-df9d-4bf3-87f8-7dad26218727",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7151),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Ergonomic Granite Chair",
                            Price = "303.76",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7153)
                        },
                        new
                        {
                            Id = "4a3ce1a0-5ddd-4f95-a23a-3c18fc3dfc5b",
                            CategoryId = "d9a18e19-75ea-4814-8f75-538e08d578f8",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7205),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Intelligent Metal Computer",
                            Price = "641.64",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7207)
                        },
                        new
                        {
                            Id = "1d34c40e-6081-4350-bc4a-b39edc7450a3",
                            CategoryId = "66451abf-94ed-46db-8ae5-1d3d9c2b1399",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7334),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Generic Plastic Table",
                            Price = "806.47",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7336)
                        },
                        new
                        {
                            Id = "23429186-8a04-4780-be4c-a5144ae480d8",
                            CategoryId = "d8848735-5dc6-4487-bbc0-0b2c05e4ec15",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7404),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Sleek Granite Keyboard",
                            Price = "505.18",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7406)
                        },
                        new
                        {
                            Id = "9f0d96a3-b63c-46be-8df9-4d00d6f04b4a",
                            CategoryId = "c8b27ece-6fdc-4c40-9e92-33143ddeccd1",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7461),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Incredible Frozen Keyboard",
                            Price = "563.61",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7463)
                        },
                        new
                        {
                            Id = "6e85b197-1d38-4fc8-874b-fdfa96fe7590",
                            CategoryId = "c8b27ece-6fdc-4c40-9e92-33143ddeccd1",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7515),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Refined Metal Computer",
                            Price = "183.78",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7517)
                        },
                        new
                        {
                            Id = "54a27b8a-a177-4a4d-a596-dd0af70a6ea5",
                            CategoryId = "3fd3ea05-4a78-408d-8003-9231b685c199",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7567),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Handmade Plastic Mouse",
                            Price = "738.08",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7569)
                        },
                        new
                        {
                            Id = "b9886181-40fc-48f5-90b5-f55dab6ab401",
                            CategoryId = "d9a18e19-75ea-4814-8f75-538e08d578f8",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7622),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Sleek Rubber Salad",
                            Price = "440.05",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7623)
                        },
                        new
                        {
                            Id = "51b13a08-2e8c-4bc8-a740-ded54a03bd0b",
                            CategoryId = "0b9243d5-91fd-44d8-ad2d-e9e0a78c0f58",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7676),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Handcrafted Metal Bike",
                            Price = "150.92",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7677)
                        },
                        new
                        {
                            Id = "a1f721c0-111b-45fe-b94d-21c9398599db",
                            CategoryId = "9c20562a-b8a6-4a8b-888f-29ca9348c6c6",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7729),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Generic Metal Hat",
                            Price = "205.87",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7731)
                        },
                        new
                        {
                            Id = "b39696db-2a62-4122-9982-c3685a6e0552",
                            CategoryId = "0b9243d5-91fd-44d8-ad2d-e9e0a78c0f58",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7787),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Generic Frozen Mouse",
                            Price = "813.07",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7789)
                        },
                        new
                        {
                            Id = "220338ad-4ba7-467e-a639-093d4990de65",
                            CategoryId = "c8b27ece-6fdc-4c40-9e92-33143ddeccd1",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7915),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Practical Fresh Computer",
                            Price = "51.51",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7917)
                        },
                        new
                        {
                            Id = "c9264787-a1e3-483e-b390-8c52d01d5aac",
                            CategoryId = "66451abf-94ed-46db-8ae5-1d3d9c2b1399",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7970),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Unbranded Granite Sausages",
                            Price = "27.53",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(7972)
                        },
                        new
                        {
                            Id = "729df707-b921-49dc-a49c-b884d2438182",
                            CategoryId = "3bc5b522-df9d-4bf3-87f8-7dad26218727",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(8022),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Handcrafted Fresh Sausages",
                            Price = "688.22",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(8024)
                        },
                        new
                        {
                            Id = "3b11571f-0172-42a8-84d3-ce08c5627b48",
                            CategoryId = "48d79c0a-6359-4f35-b9fd-9b73b476d731",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(8075),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Small Granite Keyboard",
                            Price = "360.36",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(8077)
                        },
                        new
                        {
                            Id = "784b7d0c-127c-4f2b-aaba-533d7f4832f1",
                            CategoryId = "9407dddb-fde7-4ef8-8438-4273d75e1e2a",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(8129),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Tasty Cotton Fish",
                            Price = "229.11",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(8130)
                        },
                        new
                        {
                            Id = "b00dfd57-3880-4bbd-8ef2-80ae57e8a2c0",
                            CategoryId = "c8b27ece-6fdc-4c40-9e92-33143ddeccd1",
                            CreatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(8181),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Image = "https://api.lorem.space/image/watch?w=300&h=500",
                            IsDeleted = false,
                            Name = "Refined Plastic Mouse",
                            Price = "511.62",
                            UpdatedAt = new DateTime(2023, 1, 9, 15, 28, 54, 310, DateTimeKind.Local).AddTicks(8183)
                        });
                });

            modelBuilder.Entity("Ecommerce.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("Bio")
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2dfb43f4-24d5-44a7-af3c-78196e881f23",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a567766-a259-4e53-a45c-4a0cf8d03b2c",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEL9mII8beu8tjw6mh5JAHpWuTWg1l7+tgRnvYClpWpjRh436/61C4W2D087Bn8efjA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f56a0d18-614f-447c-b626-5ba77e1e1328",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = "75fa9827-0f5f-41db-a825-64d68d242d7e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ac861b15-1fad-469f-9a4d-e6c3a8c5a6bd",
                            Email = "user@gmail.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@GMAIL.COM",
                            NormalizedUserName = "USER",
                            PasswordHash = "AQAAAAEAACcQAAAAED5zOQ+dt8K/cxCZeSG0A1dl9HZ6IAie9NS3ac+ccp9ZO7yY1C8cucoF1nTZyDQUGA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c5deda69-b5d5-443d-b0d1-6e652b68e3c4",
                            TwoFactorEnabled = false,
                            UserName = "User"
                        },
                        new
                        {
                            Id = "df31566d-5ccb-45dc-b1be-864d72133ca4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7d77690c-9136-43c8-b61d-3675db5a5c46",
                            Email = "guest@gmail.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GUEST@GMAIL.COM",
                            NormalizedUserName = "GUEST",
                            PasswordHash = "AQAAAAEAACcQAAAAEMRbNZ3zxaCSA+mplWJ8NiHnz/T1r2kYSOjXQlUlQNAt2yp0R7Z4q/V6CGRs/Qiwfg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8c7ee562-d1ad-47c0-b8e3-d798b8a437a7",
                            TwoFactorEnabled = false,
                            UserName = "Guest"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "2dfb43f4-24d5-44a7-af3c-78196e881f23",
                            RoleId = "cc3b4c20-7ab3-4daa-b777-0018ee8c615c"
                        },
                        new
                        {
                            UserId = "75fa9827-0f5f-41db-a825-64d68d242d7e",
                            RoleId = "dddd1a59-3b57-45f6-96b5-91b3e269e87c"
                        },
                        new
                        {
                            UserId = "df31566d-5ccb-45dc-b1be-864d72133ca4",
                            RoleId = "b600478d-f98b-4a27-aa95-14563920d28f"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Models.Role", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("Role");

                    b.HasData(
                        new
                        {
                            Id = "cc3b4c20-7ab3-4daa-b777-0018ee8c615c",
                            ConcurrencyStamp = "c5f98f25-5d07-4355-8396-f8c9f48f6376",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "dddd1a59-3b57-45f6-96b5-91b3e269e87c",
                            ConcurrencyStamp = "aa1e6e56-2beb-4fc7-917b-a11506d0053c",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "b600478d-f98b-4a27-aa95-14563920d28f",
                            ConcurrencyStamp = "73e1d362-a412-456e-ae52-a5b3ac327ea6",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        });
                });

            modelBuilder.Entity("Ecommerce.Models.Order", b =>
                {
                    b.HasOne("Ecommerce.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Models.OrderDetail", b =>
                {
                    b.HasOne("Ecommerce.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("Ecommerce.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Models.Product", b =>
                {
                    b.HasOne("Ecommerce.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Ecommerce.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Ecommerce.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Ecommerce.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ecommerce.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
